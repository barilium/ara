-- Orion Library Universal Compatibility Update with Music System
-- T√ºm executor'larda √ßalƒ±≈üacak ≈üekilde optimize edilmi≈ütir

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HttpService = game:GetService("HttpService")
local SoundService = game:GetService("SoundService")

-- UISizeConstraint g√ºvenlik fonksiyonu - MaxSize < MinSize hatasƒ± i√ßin
local function SafeUISizeConstraint(parent, minX, minY, maxX, maxY)
    if maxX < minX then maxX = minX end
    if maxY < minY then maxY = minY end
    
    local constraint = Instance.new("UISizeConstraint")
    constraint.MinSize = Vector2.new(minX, minY)
    constraint.MaxSize = Vector2.new(maxX, maxY)
    constraint.Parent = parent
    return constraint
end

-- Music System Variables
local MusicSystem = {
    CurrentSound = nil,
    IsPlaying = false,
    IsPaused = false,
    Volume = 0.5,
    CurrentTrack = nil,
    MusicList = {
        {Name = "Chill Vibes", ID = "rbxassetid://1837879082"},
        {Name = "Epic Battle", ID = "rbxassetid://1839246711"},
        {Name = "Relaxing Piano", ID = "rbxassetid://1836432637"},
        {Name = "Electronic Beat", ID = "rbxassetid://1838457617"},
        {Name = "Ambient Space", ID = "rbxassetid://1837879082"}
    }
}

-- ImageButton i√ßin yardƒ±mcƒ± fonksiyonlar
local function HSVtoRGB(h, s, v)
    local r, g, b
    local i = math.floor(h * 6)
    local f = h * 6 - i
    local p = v * (1 - s)
    local q = v * (1 - f * s)
    local t = v * (1 - (1 - f) * s)
    
    i = i % 6
    
    if i == 0 then r, g, b = v, t, p
    elseif i == 1 then r, g, b = q, v, p
    elseif i == 2 then r, g, b = p, v, t
    elseif i == 3 then r, g, b = p, q, v
    elseif i == 4 then r, g, b = t, p, v
    elseif i == 5 then r, g, b = v, p, q
    end
    
    return math.floor(r * 255), math.floor(g * 255), math.floor(b * 255)
end

-- Ana k√ºt√ºphane tanƒ±mlamasƒ±
local OrionLib = {
    Elements = {},
    ThemeObjects = {},
    Connections = {},
    Flags = {},
    Themes = {
        Default = {
            Main = Color3.fromRGB(18, 18, 18),
            Second = Color3.fromRGB(25, 25, 25),
            Stroke = Color3.fromRGB(50, 50, 50),
            Divider = Color3.fromRGB(50, 50, 50),
            Text = Color3.fromRGB(240, 240, 240),
            TextDark = Color3.fromRGB(140, 140, 140)
        }
    },
    SelectedTheme = "Default",
    Folder = nil,
    SaveCfg = false
}

-- Music System Functions
local function CreateMusicSystem(MainWindow, WindowConfig)
    if not WindowConfig.Music then return end
    
    -- Music Panel Container
    local MusicPanel = Instance.new("Frame")
    MusicPanel.Name = "MusicPanel"
    MusicPanel.Size = UDim2.new(0, 280, 0, 320)
    MusicPanel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    MusicPanel.BackgroundTransparency = 0.1
    MusicPanel.BorderSizePixel = 0
    MusicPanel.Visible = false
    MusicPanel.ZIndex = 1000
    
    -- Position music panel to the right of MainWindow
    local function UpdateMusicPanelPosition()
        if MainWindow and MainWindow.Parent then
            local pos = MainWindow.AbsolutePosition
            local size = MainWindow.AbsoluteSize
            MusicPanel.Position = UDim2.new(0, pos.X + size.X + 10, 0, pos.Y)
        end
    end
    
    -- Music Panel Corner
    local MusicCorner = Instance.new("UICorner")
    MusicCorner.CornerRadius = UDim.new(0, 12)
    MusicCorner.Parent = MusicPanel
    
    -- Music Panel Stroke
    local MusicStroke = Instance.new("UIStroke")
    MusicStroke.Color = Color3.fromRGB(100, 100, 255)
    MusicStroke.Thickness = 2
    MusicStroke.Transparency = 0.3
    MusicStroke.Parent = MusicPanel
    
    -- Music Panel Header
    local MusicHeader = Instance.new("Frame")
    MusicHeader.Name = "Header"
    MusicHeader.Size = UDim2.new(1, 0, 0, 40)
    MusicHeader.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MusicHeader.BorderSizePixel = 0
    MusicHeader.Parent = MusicPanel
    
    local HeaderCorner = Instance.new("UICorner")
    HeaderCorner.CornerRadius = UDim.new(0, 12)
    HeaderCorner.Parent = MusicHeader
    
    -- Music Title
    local MusicTitle = Instance.new("TextLabel")
    MusicTitle.Name = "Title"
    MusicTitle.Size = UDim2.new(1, -50, 1, 0)
    MusicTitle.Position = UDim2.new(0, 15, 0, 0)
    MusicTitle.BackgroundTransparency = 1
    MusicTitle.Text = "üéµ Music Player"
    MusicTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    MusicTitle.TextSize = 16
    MusicTitle.Font = Enum.Font.GothamBold
    MusicTitle.TextXAlignment = Enum.TextXAlignment.Left
    MusicTitle.Parent = MusicHeader
    
    -- Close Button for Music Panel
    local MusicCloseBtn = Instance.new("TextButton")
    MusicCloseBtn.Name = "CloseBtn"
    MusicCloseBtn.Size = UDim2.new(0, 30, 0, 30)
    MusicCloseBtn.Position = UDim2.new(1, -35, 0, 5)
    MusicCloseBtn.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
    MusicCloseBtn.Text = "‚úï"
    MusicCloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    MusicCloseBtn.TextSize = 14
    MusicCloseBtn.Font = Enum.Font.GothamBold
    MusicCloseBtn.BorderSizePixel = 0
    MusicCloseBtn.Parent = MusicHeader
    
    local CloseBtnCorner = Instance.new("UICorner")
    CloseBtnCorner.CornerRadius = UDim.new(1, 0)
    CloseBtnCorner.Parent = MusicCloseBtn
    
    -- Music List ScrollFrame
    local MusicScrollFrame = Instance.new("ScrollingFrame")
    MusicScrollFrame.Name = "MusicList"
    MusicScrollFrame.Size = UDim2.new(1, -20, 0, 120)
    MusicScrollFrame.Position = UDim2.new(0, 10, 0, 50)
    MusicScrollFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    MusicScrollFrame.BorderSizePixel = 0
    MusicScrollFrame.ScrollBarThickness = 4
    MusicScrollFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 255)
    MusicScrollFrame.Parent = MusicPanel
    
    local ScrollCorner = Instance.new("UICorner")
    ScrollCorner.CornerRadius = UDim.new(0, 8)
    ScrollCorner.Parent = MusicScrollFrame
    
    local MusicListLayout = Instance.new("UIListLayout")
    MusicListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    MusicListLayout.Padding = UDim.new(0, 5)
    MusicListLayout.Parent = MusicScrollFrame
    
    -- Control Buttons Container
    local ControlsFrame = Instance.new("Frame")
    ControlsFrame.Name = "Controls"
    ControlsFrame.Size = UDim2.new(1, -20, 0, 60)
    ControlsFrame.Position = UDim2.new(0, 10, 0, 180)
    ControlsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    ControlsFrame.BorderSizePixel = 0
    ControlsFrame.Parent = MusicPanel
    
    local ControlsCorner = Instance.new("UICorner")
    ControlsCorner.CornerRadius = UDim.new(0, 8)
    ControlsCorner.Parent = ControlsFrame
    
    -- Play Button
    local PlayBtn = Instance.new("TextButton")
    PlayBtn.Name = "PlayBtn"
    PlayBtn.Size = UDim2.new(0, 50, 0, 40)
    PlayBtn.Position = UDim2.new(0, 20, 0, 10)
    PlayBtn.BackgroundColor3 = Color3.fromRGB(40, 200, 80)
    PlayBtn.Text = "‚ñ∂"
    PlayBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    PlayBtn.TextSize = 18
    PlayBtn.Font = Enum.Font.GothamBold
    PlayBtn.BorderSizePixel = 0
    PlayBtn.Parent = ControlsFrame
    
    local PlayBtnCorner = Instance.new("UICorner")
    PlayBtnCorner.CornerRadius = UDim.new(0, 8)
    PlayBtnCorner.Parent = PlayBtn
    
    -- Pause Button
    local PauseBtn = Instance.new("TextButton")
    PauseBtn.Name = "PauseBtn"
    PauseBtn.Size = UDim2.new(0, 50, 0, 40)
    PauseBtn.Position = UDim2.new(0, 80, 0, 10)
    PauseBtn.BackgroundColor3 = Color3.fromRGB(255, 200, 40)
    PauseBtn.Text = "‚è∏"
    PauseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    PauseBtn.TextSize = 18
    PauseBtn.Font = Enum.Font.GothamBold
    PauseBtn.BorderSizePixel = 0
    PauseBtn.Parent = ControlsFrame
    
    local PauseBtnCorner = Instance.new("UICorner")
    PauseBtnCorner.CornerRadius = UDim.new(0, 8)
    PauseBtnCorner.Parent = PauseBtn
    
    -- Stop Button
    local StopBtn = Instance.new("TextButton")
    StopBtn.Name = "StopBtn"
    StopBtn.Size = UDim2.new(0, 50, 0, 40)
    StopBtn.Position = UDim2.new(0, 140, 0, 10)
    StopBtn.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
    StopBtn.Text = "‚èπ"
    StopBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    StopBtn.TextSize = 18
    StopBtn.Font = Enum.Font.GothamBold
    StopBtn.BorderSizePixel = 0
    StopBtn.Parent = ControlsFrame
    
    local StopBtnCorner = Instance.new("UICorner")
    StopBtnCorner.CornerRadius = UDim.new(0, 8)
    StopBtnCorner.Parent = StopBtn
    
    -- Volume Control
    local VolumeFrame = Instance.new("Frame")
    VolumeFrame.Name = "VolumeFrame"
    VolumeFrame.Size = UDim2.new(1, -20, 0, 50)
    VolumeFrame.Position = UDim2.new(0, 10, 0, 250)
    VolumeFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    VolumeFrame.BorderSizePixel = 0
    VolumeFrame.Parent = MusicPanel
    
    local VolumeCorner = Instance.new("UICorner")
    VolumeCorner.CornerRadius = UDim.new(0, 8)
    VolumeCorner.Parent = VolumeFrame
    
    -- Volume Label
    local VolumeLabel = Instance.new("TextLabel")
    VolumeLabel.Name = "VolumeLabel"
    VolumeLabel.Size = UDim2.new(0, 60, 0, 20)
    VolumeLabel.Position = UDim2.new(0, 10, 0, 5)
    VolumeLabel.BackgroundTransparency = 1
    VolumeLabel.Text = "üîä Volume"
    VolumeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    VolumeLabel.TextSize = 12
    VolumeLabel.Font = Enum.Font.GothamSemibold
    VolumeLabel.TextXAlignment = Enum.TextXAlignment.Left
    VolumeLabel.Parent = VolumeFrame
    
    -- Volume Slider
    local VolumeSlider = Instance.new("Frame")
    VolumeSlider.Name = "VolumeSlider"
    VolumeSlider.Size = UDim2.new(1, -20, 0, 6)
    VolumeSlider.Position = UDim2.new(0, 10, 0, 30)
    VolumeSlider.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    VolumeSlider.BorderSizePixel = 0
    VolumeSlider.Parent = VolumeFrame
    
    local VolumeSliderCorner = Instance.new("UICorner")
    VolumeSliderCorner.CornerRadius = UDim.new(1, 0)
    VolumeSliderCorner.Parent = VolumeSlider
    
    -- Volume Fill
    local VolumeFill = Instance.new("Frame")
    VolumeFill.Name = "VolumeFill"
    VolumeFill.Size = UDim2.new(0.5, 0, 1, 0)
    VolumeFill.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
    VolumeFill.BorderSizePixel = 0
    VolumeFill.Parent = VolumeSlider
    
    local VolumeFillCorner = Instance.new("UICorner")
    VolumeFillCorner.CornerRadius = UDim.new(1, 0)
    VolumeFillCorner.Parent = VolumeFill
    
    -- Volume Knob
    local VolumeKnob = Instance.new("Frame")
    VolumeKnob.Name = "VolumeKnob"
    VolumeKnob.Size = UDim2.new(0, 16, 0, 16)
    VolumeKnob.Position = UDim2.new(0.5, -8, 0.5, -8)
    VolumeKnob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    VolumeKnob.BorderSizePixel = 0
    VolumeKnob.Parent = VolumeSlider
    
    local VolumeKnobCorner = Instance.new("UICorner")
    VolumeKnobCorner.CornerRadius = UDim.new(1, 0)
    VolumeKnobCorner.Parent = VolumeKnob
    
    -- Music Toggle Button (next to minimize button)
    local MusicToggleBtn = Instance.new("TextButton")
    MusicToggleBtn.Name = "MusicToggleBtn"
    MusicToggleBtn.Size = UDim2.new(0, 30, 0, 30)
    MusicToggleBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
    MusicToggleBtn.Text = "üéµ"
    MusicToggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    MusicToggleBtn.TextSize = 16
    MusicToggleBtn.Font = Enum.Font.GothamBold
    MusicToggleBtn.BorderSizePixel = 0
    
    local MusicToggleCorner = Instance.new("UICorner")
    MusicToggleCorner.CornerRadius = UDim.new(1, 0)
    MusicToggleCorner.Parent = MusicToggleBtn
    
    -- Add music toggle button to TopBar
    if MainWindow:FindFirstChild("TopBar") then
        local TopBar = MainWindow.TopBar
        MusicToggleBtn.Parent = TopBar
        
        -- Position next to minimize button
        local MinimizeContainer = TopBar:FindFirstChild("Frame")
        if MinimizeContainer then
            MusicToggleBtn.Position = UDim2.new(1, -130, 0, 5)
        end
    end
    
    -- Music System Functions
    local function PlayMusic(musicData)
        if MusicSystem.CurrentSound then
            MusicSystem.CurrentSound:Stop()
            MusicSystem.CurrentSound:Destroy()
        end
        
        local sound = Instance.new("Sound")
        sound.SoundId = musicData.ID
        sound.Volume = MusicSystem.Volume
        sound.Looped = true
        sound.Parent = SoundService
        
        MusicSystem.CurrentSound = sound
        MusicSystem.CurrentTrack = musicData
        MusicSystem.IsPlaying = true
        MusicSystem.IsPaused = false
        
        sound:Play()
        
        -- Update UI
        PlayBtn.Text = "‚è∏"
        PlayBtn.BackgroundColor3 = Color3.fromRGB(255, 200, 40)
    end
    
    local function PauseMusic()
        if MusicSystem.CurrentSound and MusicSystem.IsPlaying then
            if MusicSystem.IsPaused then
                MusicSystem.CurrentSound:Resume()
                MusicSystem.IsPaused = false
                PlayBtn.Text = "‚è∏"
                PlayBtn.BackgroundColor3 = Color3.fromRGB(255, 200, 40)
            else
                MusicSystem.CurrentSound:Pause()
                MusicSystem.IsPaused = true
                PlayBtn.Text = "‚ñ∂"
                PlayBtn.BackgroundColor3 = Color3.fromRGB(40, 200, 80)
            end
        end
    end
    
    local function StopMusic()
        if MusicSystem.CurrentSound then
            MusicSystem.CurrentSound:Stop()
            MusicSystem.IsPlaying = false
            MusicSystem.IsPaused = false
            PlayBtn.Text = "‚ñ∂"
            PlayBtn.BackgroundColor3 = Color3.fromRGB(40, 200, 80)
        end
    end
    
    local function UpdateVolume(value)
        MusicSystem.Volume = math.clamp(value, 0, 1)
        if MusicSystem.CurrentSound then
            MusicSystem.CurrentSound.Volume = MusicSystem.Volume
        end
        
        VolumeFill.Size = UDim2.new(MusicSystem.Volume, 0, 1, 0)
        VolumeKnob.Position = UDim2.new(MusicSystem.Volume, -8, 0.5, -8)
    end
    
    -- Create Music List Items
    for i, musicData in ipairs(MusicSystem.MusicList) do
        local MusicItem = Instance.new("TextButton")
        MusicItem.Name = "MusicItem" .. i
        MusicItem.Size = UDim2.new(1, -10, 0, 30)
        MusicItem.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        MusicItem.Text = musicData.Name
        MusicItem.TextColor3 = Color3.fromRGB(255, 255, 255)
        MusicItem.TextSize = 14
        MusicItem.Font = Enum.Font.Gotham
        MusicItem.BorderSizePixel = 0
        MusicItem.Parent = MusicScrollFrame
        
        local ItemCorner = Instance.new("UICorner")
        ItemCorner.CornerRadius = UDim.new(0, 6)
        ItemCorner.Parent = MusicItem
        
        -- Music Item Click
        MusicItem.MouseButton1Click:Connect(function()
            PlayMusic(musicData)
            
            -- Update selection visual
            for _, child in pairs(MusicScrollFrame:GetChildren()) do
                if child:IsA("TextButton") then
                    child.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                end
            end
            MusicItem.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
        end)
        
        -- Hover effects
        MusicItem.MouseEnter:Connect(function()
            if MusicItem.BackgroundColor3 ~= Color3.fromRGB(100, 100, 255) then
                TweenService:Create(MusicItem, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
                    BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                }):Play()
            end
        end)
        
        MusicItem.MouseLeave:Connect(function()
            if MusicItem.BackgroundColor3 ~= Color3.fromRGB(100, 100, 255) then
                TweenService:Create(MusicItem, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
                    BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                }):Play()
            end
        end)
    end
    
    -- Update ScrollFrame Canvas Size
    MusicScrollFrame.CanvasSize = UDim2.new(0, 0, 0, MusicListLayout.AbsoluteContentSize.Y + 10)
    MusicListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        MusicScrollFrame.CanvasSize = UDim2.new(0, 0, 0, MusicListLayout.AbsoluteContentSize.Y + 10)
    end)
    
    -- Button Events
    PlayBtn.MouseButton1Click:Connect(function()
        if MusicSystem.CurrentTrack then
            PauseMusic()
        elseif #MusicSystem.MusicList > 0 then
            PlayMusic(MusicSystem.MusicList[1])
        end
    end)
    
    PauseBtn.MouseButton1Click:Connect(function()
        PauseMusic()
    end)
    
    StopBtn.MouseButton1Click:Connect(function()
        StopMusic()
    end)
    
    MusicCloseBtn.MouseButton1Click:Connect(function()
        MusicPanel.Visible = false
    end)
    
    MusicToggleBtn.MouseButton1Click:Connect(function()
        MusicPanel.Visible = not MusicPanel.Visible
        UpdateMusicPanelPosition()
    end)
    
    -- Volume Slider Interaction
    local draggingVolume = false
    
    VolumeSlider.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            draggingVolume = true
        end
    end)
    
    VolumeSlider.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            draggingVolume = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if draggingVolume and input.UserInputType == Enum.UserInputType.MouseMovement then
            local sliderPos = VolumeSlider.AbsolutePosition
            local sliderSize = VolumeSlider.AbsoluteSize
            local mouseX = input.Position.X
            local relativeX = math.clamp((mouseX - sliderPos.X) / sliderSize.X, 0, 1)
            UpdateVolume(relativeX)
        end
    end)
    
    -- Position update when MainWindow moves
    RunService.RenderStepped:Connect(function()
        if MusicPanel.Visible then
            UpdateMusicPanelPosition()
        end
    end)
    
    -- Add MusicPanel to the same parent as MainWindow
    MusicPanel.Parent = MainWindow.Parent
    
    -- Initialize volume
    UpdateVolume(MusicSystem.Volume)
    
    return MusicPanel
end

-- [Rest of the original Orion Library code continues here...]
-- [The original code structure remains the same, just with the music system integration]

-- Modified MakeWindow function to include Music parameter
function OrionLib:MakeWindow(WindowConfig)
    local FirstTab = true
    local Minimized = false
    local Loaded = false
    local UIHidden = false

    WindowConfig = WindowConfig or {}
    WindowConfig.Name = WindowConfig.Name or "Orion Library"
    WindowConfig.ConfigFolder = WindowConfig.ConfigFolder or WindowConfig.Name
    WindowConfig.SaveConfig = WindowConfig.SaveConfig or false
    WindowConfig.HidePremium = WindowConfig.HidePremium or false
    WindowConfig.CloseCallback = WindowConfig.CloseCallback or function() end
    WindowConfig.ShowIcon = WindowConfig.ShowIcon or false
    WindowConfig.Icon = WindowConfig.Icon or "rbxassetid://8834748103"
    WindowConfig.Music = WindowConfig.Music or false -- New Music parameter
    
    OrionLib.Folder = WindowConfig.ConfigFolder
    OrionLib.SaveCfg = WindowConfig.SaveConfig

    if WindowConfig.SaveConfig then
        if not isfolder(WindowConfig.ConfigFolder) then
            makefolder(WindowConfig.ConfigFolder)
        end    
    end

    -- [Original window creation code continues...]
    -- Create MainWindow with all original functionality
    local MainWindow = -- [Original MainWindow creation code]
    
    -- Add Music System if enabled
    if WindowConfig.Music then
        CreateMusicSystem(MainWindow, WindowConfig)
    end
    
    -- [Rest of the original MakeWindow function continues...]
    
    return TabFunction
end

-- [All other original functions remain unchanged...]

return OrionLib
